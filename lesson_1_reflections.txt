How did viewing a diff (fc) between two versions of a 
file help me see the bug that was introduced?
It helped by highlighting where an old version that worked
differed from a new version that did not.

How could having easy access to the entire history of a file
make you a more efficient programmer in the long term?
By enabling me to go back in time to places where I know that 
the program or script is behaving as intended. 

What do you think are the pros and cons of manually choosing 
when to create a commit, like you do in Git, vs having versions
automatically saved, like Google Docs does?
Pros, since it's when you choose you are able to save a 
reason for the commit. Cons, it's easy to forget to do.

Why do you think some version control systems, like Git, allow 
saving multiple files in one commit, while others, like Google
Docs, treat each file separately? 
Because Git is ONLY a version control system centered around 
code writing and development, whereas Google Docs keeps the 
version control in the background because it's only meant to
control versions of richly formatted text.

How can you use the commands git log and git diff to view the 
history of files?
git log shows all of the commits made to that file, while 
git diff shows the changes between two commits.

How might using version control make you more confident to make
changes that could break something?
By enabling me to easily move back to older versions without
worrying about saving it as a seperate file, and by enabling
easy comparison between files so I'll remember exactly what I
changed.

Now that you have your workspace set up, what do you want to 
try using Git for?
I have a machine learning project that I'd like to use it for.



